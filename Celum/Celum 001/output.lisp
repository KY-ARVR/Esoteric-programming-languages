;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; 
;; This file serves to realize the output buffer, an adminicular entity
;; whose dedication appertains to the provision of a bitwise, buffered
;; printing facility.
;; 
;; Upon each output request, the tape's central bit is transferred to
;; the output buffer's current position, inchoating at the least
;; significant bit (LSB) location and advancing towards the most
;; significant one (MSB). If the output buffer contains exactly eight
;; bits, its content, transcripted into the character for corresponding
;; ASCII code, is printed to the standard output.
;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -- Implementation of class "Output".                            -- ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defclass Output ()
  ((bits
    :initarg       :bits
    :initform      0
    :type          octet
    :documentation "A collection of at most eight bits, generated by
                    receiving from the least to the most significant
                    position its values.
                    ---
                    Each new bit is inserted at the index designated by
                    the current value of the SIZE slot, which is
                    subsequently augmented.")
   (size
    :initform      0
    :type          (integer 0 8)
    :documentation "The number of bits currently stored in this output
                    buffer.
                    ---
                    If this counter reaches eight bits, the BITS buffer
                    is considered as \"full\", or complete."))
  (:documentation
    "The ``Output'' class provides a buffer for the collection of bits
     into a byte, the accumulation of which consigns it to the
     eligibility of its construe as an ASCII character code and its
     subsequent output in this form."))

;;; -------------------------------------------------------

(defun make-output ()
  "Creates and returns a new ``Output'' buffer."
  (the Output (make-instance 'Output)))

;;; -------------------------------------------------------

(defun output-append (output new-bit)
  "Appends the NEW-BIT to the OUTPUT buffer's rear and returns no
   value."
  (declare (type Output output))
  (declare (type bit    new-bit))
  (with-slots (bits size) output
    (declare (type octet         bits))
    (declare (type (integer 0 8) size))
    (setf (ldb (byte 1 size) bits) new-bit)
    (incf size))
  (values))

;;; -------------------------------------------------------

(defun output-complete-p (output)
  "Determines whether the OUTPUT buffer has already printed its complete
   content, returning on confirmation a ``boolean'' value of ``T'',
   otherwise ``NIL''."
  (declare (type Output output))
  (with-slots (size) output
    (declare (type (integer 0 8) size))
    (the boolean
      (not (null (>= size 8))))))

;;; -------------------------------------------------------

(defun output-print (output)
  "Prints the OUTPUT buffer's bits in the form of the character whose
   ASCII code corresponds to the maintained byte's decimal value to the
   standard output and returns no value."
  (declare (type Output output))
  (with-slots (bits) output
    (declare (type octet   bits))
    (format T "~c" (code-char bits)))
  (values))

;;; -------------------------------------------------------

(defun output-reset (output)
  "Resets the OUTPUT buffer's position cursor to the least significant
   bit's location and returns no value."
  (declare (type Output output))
  (with-slots (size) output
    (declare (type (integer 0 8) size))
    (setf size 0))
  (values))
